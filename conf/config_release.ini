# ke-RAG Docker环境配置文件
# 注意：这是Docker容器内部使用的配置，请根据实际环境修改

[COMMON]
# 允许的主机列表
allowed_host = ['*']

[DB]
# 数据库配置 - Docker环境
host = mysql
port = 3306
username = bella_rag_user
password = bella_rag_password
dbname = bella_rag

[REDIS]
# Redis配置 - Docker环境
host = redis
port = 6379
password =
database = 0

[DIRFILE]
# 日志存储目录
logroot = /app/logs

[OPENAPI]
# OpenAI API配置（必需）
ak = Bearer 85f22198-59cb-4da8-9ef9-07c1bd30ad21
api_base = https://api.bella.top/v1

[VECTOR_DB]
# 向量数据库类型选择: tencent 或 qdrant
vector_db_type = qdrant
# 通用配置
dimension = 1024
metric_type = COSINE
embedding_model = text_embedding_v3
# 每次请求embedding模型批大小
embedding_batch_size = 10

[TENCENT_VECTOR_DB]
# 腾讯向量数据库配置
url = http://tvectordb.ke.com
key = account=root&api_key=your_tencent_key_here
database_name = bella_rag_test
# 集合名称配置
collection_name = documents_test
questions_collection_name = qa_documents_test
summary_question_collection_name = summary_documents_test

[QDRANT_VECTOR_DB]
# Qdrant向量数据库配置
url = http://qdrant:6333
api_key =
# 或者使用host/port方式连接
host = qdrant
port = 6333
grpc_port = 6334
prefer_grpc = false
# 集合名称配置
collection_name = documents
questions_collection_name = qa_documents
summary_collection_name = summary_documents

[ELASTICSEARCH]
# Elasticsearch配置
hosts = http://elasticsearch:9200
username =
password =
index_name = bella_rag

[S3]
# S3存储配置（可选）
access_key =
secret_key =
bucket_name =
endpoint =
region =
image_domain =

[KAFKA]
# Kafka配置（可选，用于异步任务处理）
bootstrap_servers = kafka:29092
knowledge_index_topic = knowledge-index-task
knowledge_index_task_bootstrap_servers = kafka:29092
knowledge_index_task_topic = knowledge-index-task
knowledge_index_group_id = knowledge-index-group
knowledge_file_index_done_bootstrap_servers = kafka:29092
knowledge_file_index_done_topic = knowledge-file-index-done
knowledge_file_index_done_group_id = knowledge-file-index-done-group
file_api_bootstrap_servers = 74.48.194.220:19092
file_api_topic = bella_file_api
file_api_group_id = file-api-group
knowledge_file_index_context_group_id = knowledge-file-context-group
knowledge_file_delete_bootstrap_servers = kafka:29092
knowledge_file_delete_topic = knowledge-file-delete
knowledge_file_delete_group_id = knowledge-file-delete-group

[RETRIEVAL]
# 检索配置
retrieval_num = 50
complete_token_threshold = 0.6
complete_max_token = 1500
match_score = 0.95

[RERANK]
# Rerank模型配置 - 使用Hugging face部署的Space服务
api_base = https://lilovezeng-ke-rag-rerank.hf.space/v1/rerank
model = bge-reranker-large
rerank_num = 20
rerank_threshold = 0.99

[CONTEXT_SUMMARY]
# 上下文总结配置
spilt_max_length = 1500
max_background_length = 20000
overlap_length = 2000
merge_min_length = 1000
force_merge_length = 300
merge_max_length = 1500
summary_max_batch_size = 30

[CACHE]
# 缓存配置
capacity = 10000

[FILE_API]
# file API配置
url = https://knowledge.bella.top/v1

[OCR]
# OCR配置
model_name = gpt-4o
enable = False
vision_model_list = []
